[  {    "group": "Photos",    "type": "del",    "url": "/photos/:id",    "title": "3. DEL /photos/:id",    "description": "<p>Delete photo, must be owner or admin.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>Photo id.</p>"          }        ]      }    },    "version": "0.1.1",    "filename": "app/routes/photos/del.js",    "groupTitle": "Photos",    "name": "DelPhotosId",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "statusCode",            "description": "<p>HTTP status code</p>"          },          {            "group": "Success 200",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n{\n \"statusCode\": 200,\n \"message\": \"Action completed successfully.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Photos",    "type": "get",    "url": "/photos",    "title": "5. GET /photos",    "description": "<p>List photos.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "username",            "description": "<p>Username to filter by (case insensitive).</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "startDate",            "description": "<p>Minimum <code>recordedAt</code> value, must be an ISO date.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "endDate",            "description": "<p>Maximum <code>recordedAt</code> value, must be an ISO date.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "osmElementType",            "description": "<p>Element type to filter by.</p>"          },          {            "group": "Parameter",            "type": "number",            "optional": false,            "field": "osmElementId",            "description": "<p>Element id to filter by.</p>"          }        ],        "Pagination": [          {            "group": "Pagination",            "type": "integer",            "optional": false,            "field": "limit",            "description": "<p>Number of items per page.</p>"          },          {            "group": "Pagination",            "type": "integer",            "optional": false,            "field": "page",            "description": "<p>Page to return.</p>"          },          {            "group": "Pagination",            "type": "object",            "optional": false,            "field": "sort",            "description": "<p>Sorting parameters.</p>"          }        ]      },      "examples": [        {          "title": "Pagination example:",          "content": "{\n page: 3,\n limit: 20,\n sort: {\n   length: 'desc',\n   uploadedAt: 'asc'\n }\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "object",            "optional": false,            "field": "meta",            "description": "<p>Pagination metadata.</p>"          },          {            "group": "Success 200",            "type": "object",            "optional": false,            "field": "results",            "description": "<p>List of photos.</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "{ meta:\n { count: 15,\n   pageCount: 5,\n   totalCount: 50,\n   next: 'http://0.0.0.0:3001/photos?page=4&sort=&limit=15',\n   previous: 'http://0.0.0.0:3001/photos?page=2&sort=&limit=15',\n   self: 'http://0.0.0.0:3001/photos?page=3&sort=&limit=15',\n   first: 'http://0.0.0.0:3001/photos?page=1&sort=&limit=15',\n   last: 'http://0.0.0.0:3001/photos?page=4&sort=&limit=15' },\n results:\n   [ { id: '_OeLSdc-nf',\n       ownerId: 87122,\n       ownerDisplayName: 'User22',\n       description: 'Photo description.',\n       uploadedAt: '2019-10-16T10:44:16.321Z',\n       createdAt: '2019-10-16T10:44:16.321Z' },\n     { id: '2kWAlmk_Ev',\n       ownerId: 87123,\n       ownerDisplayName: 'User23',\n       description: 'Photo description.',\n       uploadedAt: '2019-10-16T10:44:16.326Z',\n       createdAt: '2019-10-16T10:44:16.326Z' },\n     { id: '9jF9mT4llR',\n       ownerId: 87124,\n       ownerDisplayName: 'User24',\n       description: 'Photo description.',\n       uploadedAt: '2019-10-16T10:44:16.330Z',\n       createdAt: '2019-10-16T10:44:16.330Z' },\n     { id: '0qGqe-jZ5a',\n       ownerId: 87125,\n       ownerDisplayName: 'User25',\n       description: 'Photo description.',\n       uploadedAt: '2019-10-16T10:44:16.334Z',\n       createdAt: '2019-10-16T10:44:16.334Z' },\n     { id: 'O1HDf5mOhQ',\n       ownerId: 87126,\n       ownerDisplayName: 'User26',\n       description: 'Photo description.',\n       uploadedAt: '2019-10-16T10:44:16.339Z',\n       createdAt: '2019-10-16T10:44:16.339Z' },\n ]}\n}",          "type": "json"        }      ]    },    "version": "0.1.1",    "filename": "app/routes/photos/list.js",    "groupTitle": "Photos",    "name": "GetPhotos",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Photos",    "type": "get",    "url": "/photos/:id",    "title": "4. GET /photos/:id",    "description": "<p>Get photo.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>Photo id.</p>"          }        ]      }    },    "version": "0.1.1",    "filename": "app/routes/photos/get.js",    "groupTitle": "Photos",    "name": "GetPhotosId",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Photos",    "type": "patch",    "url": "/photos",    "title": "2. PATCH /photos/:id",    "description": "<p>Update a photo, must be owner or admin.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>Photo id.</p>"          },          {            "group": "Parameter",            "type": "float",            "optional": false,            "field": "heading",            "description": "<p>Heading.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "description",            "description": "<p>Description.</p>"          },          {            "group": "Parameter",            "type": "float",            "optional": false,            "field": "lon",            "description": "<p>Longitude.</p>"          },          {            "group": "Parameter",            "type": "float",            "optional": false,            "field": "lat",            "description": "<p>Latitude.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "osmElement",            "description": "<p>OpenStreetMap id of photographed element.</p>"          }        ]      },      "examples": [        {          "title": "Example:",          "content": "{\n osmElement: 'way/677949489'\n}",          "type": "json"        }      ]    },    "version": "0.1.1",    "filename": "app/routes/photos/patch.js",    "groupTitle": "Photos",    "name": "PatchPhotos",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "statusCode",            "description": "<p>HTTP status code</p>"          },          {            "group": "Success 200",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n{\n \"statusCode\": 200,\n \"message\": \"Action completed successfully.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Photos",    "type": "post",    "url": "/photos",    "title": "1. POST /photos",    "description": "<p>Upload a new photo.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "file",            "description": "<p>Image in base64 format.</p>"          },          {            "group": "Parameter",            "type": "float",            "optional": false,            "field": "heading",            "description": "<p>Heading.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "description",            "description": "<p>Description.</p>"          },          {            "group": "Parameter",            "type": "float",            "optional": false,            "field": "lon",            "description": "<p>Longitude.</p>"          },          {            "group": "Parameter",            "type": "float",            "optional": false,            "field": "lat",            "description": "<p>Latitude.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "osmElement",            "description": "<p>OpenStreetMap id of photographed element..</p>"          }        ]      },      "examples": [        {          "title": "Example:",          "content": "{\n osmElement: 'way/677949489'\n}",          "type": "json"        }      ]    },    "version": "0.1.1",    "filename": "app/routes/photos/post.js",    "groupTitle": "Photos",    "name": "PostPhotos",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "statusCode",            "description": "<p>HTTP status code</p>"          },          {            "group": "Success 200",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n{\n \"statusCode\": 200,\n \"message\": \"Action completed successfully.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Traces",    "type": "del",    "url": "/traces/:id",    "title": "3. DEL /traces/:id",    "description": "<p>Delete trace, must be owner or admin.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>Trace id.</p>"          }        ]      }    },    "version": "0.1.1",    "filename": "app/routes/traces/del.js",    "groupTitle": "Traces",    "name": "DelTracesId",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "statusCode",            "description": "<p>HTTP status code</p>"          },          {            "group": "Success 200",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n{\n \"statusCode\": 200,\n \"message\": \"Action completed successfully.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Traces",    "type": "get",    "url": "/traces",    "title": "6. GET /traces",    "description": "<p>Get a list of photos.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "username",            "description": "<p>Username to filter by (case insensitive).</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "startDate",            "description": "<p>Minimum <code>recordedAt</code> value, must be an ISO date.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "endDate",            "description": "<p>Maximum <code>recordedAt</code> value, must be an ISO date.</p>"          },          {            "group": "Parameter",            "type": "number",            "optional": false,            "field": "lengthMin",            "description": "<p>Minimum length value to filter by.</p>"          },          {            "group": "Parameter",            "type": "number",            "optional": false,            "field": "lengthMax",            "description": "<p>Maximum length value to filter by.</p>"          }        ],        "Pagination": [          {            "group": "Pagination",            "type": "integer",            "optional": false,            "field": "limit",            "description": "<p>Number of items per page.</p>"          },          {            "group": "Pagination",            "type": "integer",            "optional": false,            "field": "page",            "description": "<p>Page to return.</p>"          },          {            "group": "Pagination",            "type": "object",            "optional": false,            "field": "sort",            "description": "<p>Sorting parameters.</p>"          }        ]      },      "examples": [        {          "title": "Pagination example:",          "content": "{\n page: 3,\n limit: 20,\n sort: {\n   length: 'desc',\n   uploadedAt: 'asc'\n }\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "object",            "optional": false,            "field": "meta",            "description": "<p>Pagination metadata.</p>"          },          {            "group": "Success 200",            "type": "object",            "optional": false,            "field": "results",            "description": "<p>List of traces.</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "{ meta:\n { count: 15,\n   pageCount: 5,\n   totalCount: 50,\n   next: 'http://0.0.0.0:3001/traces?page=4&sort=&limit=15',\n   previous: 'http://0.0.0.0:3001/traces?page=2&sort=&limit=15',\n   self: 'http://0.0.0.0:3001/traces?page=3&sort=&limit=15',\n   first: 'http://0.0.0.0:3001/traces?page=1&sort=&limit=15',\n   last: 'http://0.0.0.0:3001/traces?page=4&sort=&limit=15' },\n results:\n   [ { id: '_OeLSdc-nf',\n       ownerId: 87008,\n       description: 'This is a TraceJSON file.',\n       length: 534.717,\n       recordedAt: '2019-07-24T23:34:20.021Z',\n       uploadedAt: '2019-10-16T10:44:16.321Z',\n       updatedAt: '2019-10-16T10:44:16.321Z' },\n     { id: '2kWAlmk_Ev',\n       ownerId: 87008,\n       description: 'This is a TraceJSON file.',\n       length: 534.717,\n       recordedAt: '2019-07-24T23:34:20.021Z',\n       uploadedAt: '2019-10-16T10:44:16.326Z',\n       updatedAt: '2019-10-16T10:44:16.326Z' },\n     { id: '9jF9mT4llR',\n       ownerId: 87008,\n       description: 'This is a TraceJSON file.',\n       length: 534.717,\n       recordedAt: '2019-07-24T23:34:20.021Z',\n       uploadedAt: '2019-10-16T10:44:16.330Z',\n       updatedAt: '2019-10-16T10:44:16.330Z' },\n     { id: '0qGqe-jZ5a',\n       ownerId: 87008,\n       description: 'This is a TraceJSON file.',\n       length: 534.717,\n       recordedAt: '2019-07-24T23:34:20.021Z',\n       uploadedAt: '2019-10-16T10:44:16.334Z',\n       updatedAt: '2019-10-16T10:44:16.334Z' },\n     { id: 'O1HDf5mOhQ',\n       ownerId: 87008,\n       description: 'This is a TraceJSON file.',\n       length: 534.717,\n       recordedAt: '2019-07-24T23:34:20.021Z',\n       uploadedAt: '2019-10-16T10:44:16.339Z',\n       updatedAt: '2019-10-16T10:44:16.339Z' },\n ]}\n}",          "type": "json"        }      ]    },    "version": "0.1.1",    "filename": "app/routes/traces/list.js",    "groupTitle": "Traces",    "name": "GetTraces",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Traces",    "type": "get",    "url": "/traces/:id",    "title": "4. GET /traces/:id",    "description": "<p>Get trace as GeoJSON. Must be trace's owner or admin.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>Trace id.</p>"          }        ]      }    },    "version": "0.1.1",    "filename": "app/routes/traces/get.js",    "groupTitle": "Traces",    "name": "GetTracesId",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "object",            "optional": false,            "field": "tracejson",            "description": "<p>Trace in TraceJSON format.</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n{\n  \"type\": \"Feature\",\n  \"properties\": {\n    \"description\": \"This is a TraceJSON file.\",\n    \"timestamps\": [\n      1564011260021,\n      1564011261801,\n      1564011262345,\n      1564011263968,\n      1564011264112,\n      1564011265883\n    ]\n  },\n  \"geometry\": {\n    \"type\": \"LineString\",\n    \"coordinates\": [\n      [-46.6599869728088, -23.5927391909129],\n      [-46.6597080230712, -23.5919329603572],\n      [-46.6589999198913, -23.5909300812880],\n      [-46.6580557823181, -23.590320484382],\n      [-46.6571545600891, -23.5900648461272],\n      [-46.6564464569091, -23.58951423896]\n    ]\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Traces",    "type": "get",    "url": "/traces/:id.gpx",    "title": "5. GET /traces/:id.gpx",    "description": "<p>Get trace in GPX format. No authorization is required.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>Trace id.</p>"          }        ]      }    },    "version": "0.1.1",    "filename": "app/routes/traces/get.js",    "groupTitle": "Traces",    "name": "GetTracesIdGpx",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "file",            "description": "<p>Trace in GPX format.</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n<gpx xmlns=\"http://www.topografix.com/GPX/1/1\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd\" version=\"1.1\" creator=\"togpx\">\n<metadata/>\n<trk>\n  <name>_EQOlQXjjY</name>\n  <desc>id=_EQOlQXjjY ownerId=709 ownerDisplayName=vitor description=This is a TraceJSON file. length=534.717</desc>\n  <trkseg>\n    <trkpt lat=\"-23.5927391909129\" lon=\"-46.6599869728088\">\n      <time>2019-07-24T23:34:20.021Z</time>\n    </trkpt>\n    <trkpt lat=\"-23.5919329603572\" lon=\"-46.6597080230712\">\n      <time>2019-07-24T23:34:21.801Z</time>\n    </trkpt>\n    <trkpt lat=\"-23.590930081288\" lon=\"-46.6589999198913\">\n      <time>2019-07-24T23:34:22.345Z</time>\n    </trkpt>\n    <trkpt lat=\"-23.590320484382\" lon=\"-46.6580557823181\">\n      <time>2019-07-24T23:34:23.968Z</time>\n    </trkpt>\n    <trkpt lat=\"-23.5900648461272\" lon=\"-46.6571545600891\">\n      <time>2019-07-24T23:34:24.112Z</time>\n    </trkpt>\n    <trkpt lat=\"-23.58951423896\" lon=\"-46.6564464569091\">\n      <time>2019-07-24T23:34:25.883Z</time>\n    </trkpt>\n  </trkseg>\n</trk>\n</gpx>",          "type": "String"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Traces",    "type": "patch",    "url": "/traces/:id",    "title": "2. PATCH /traces/:id",    "description": "<p>Update trace, must be owner or admin.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": ":id",            "description": "<p>Trace id.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "description",            "description": "<p>Trace description.</p>"          }        ]      }    },    "version": "0.1.1",    "filename": "app/routes/traces/patch.js",    "groupTitle": "Traces",    "name": "PatchTracesId",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "statusCode",            "description": "<p>HTTP status code</p>"          },          {            "group": "Success 200",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n{\n \"statusCode\": 200,\n \"message\": \"Action completed successfully.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Traces",    "type": "post",    "url": "/traces",    "title": "1. POST /traces",    "description": "<p>Upload a new trace.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "object",            "optional": false,            "field": "tracejson",            "description": "<p>TraceJSON object.</p>"          }        ]      }    },    "version": "0.1.1",    "filename": "app/routes/traces/post.js",    "groupTitle": "Traces",    "name": "PostTraces",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "object",            "optional": false,            "field": "tracejson",            "description": "<p>Trace in TraceJSON format.</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n{\n  \"type\": \"Feature\",\n  \"properties\": {\n    \"description\": \"This is a TraceJSON file.\",\n    \"timestamps\": [\n      1564011260021,\n      1564011261801,\n      1564011262345,\n      1564011263968,\n      1564011264112,\n      1564011265883\n    ]\n  },\n  \"geometry\": {\n    \"type\": \"LineString\",\n    \"coordinates\": [\n      [-46.6599869728088, -23.5927391909129],\n      [-46.6597080230712, -23.5919329603572],\n      [-46.6589999198913, -23.5909300812880],\n      [-46.6580557823181, -23.590320484382],\n      [-46.6571545600891, -23.5900648461272],\n      [-46.6564464569091, -23.58951423896]\n    ]\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Users",    "type": "get",    "url": "/profile",    "title": "2. GET /profile",    "description": "<p>Get profile for the authenticated user.</p>",    "version": "0.1.1",    "filename": "app/routes/profile/get.js",    "groupTitle": "Users",    "name": "GetProfile",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Users",    "type": "get",    "url": "/users",    "title": "1. GET /users",    "description": "<p>Provides a simple listing of users.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "number",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>Paginate through results.</p>"          },          {            "group": "Parameter",            "type": "number",            "optional": true,            "field": "limit",            "defaultValue": "15",            "description": "<p>Change the number of results returned, max is 100.</p>"          },          {            "group": "Parameter",            "type": "object",            "optional": true,            "field": "sort",            "defaultValue": "asc",            "description": "<p>Define sort order for one or more fields (ex. <code>sort[osmDisplayName]=asc&amp;sort[osmCreatedAt]=desc</code>).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "integer",            "optional": false,            "field": "osmId",            "description": "<p>User id in OSM</p>"          },          {            "group": "Success 200",            "type": "string",            "optional": false,            "field": "osmDisplayName",            "description": "<p>Display name in OSM</p>"          },          {            "group": "Success 200",            "type": "string",            "optional": false,            "field": "osmCreatedAt",            "description": "<p>User creation data in OSM</p>"          },          {            "group": "Success 200",            "type": "boolean",            "optional": false,            "field": "isAdmin",            "description": "<p>True if user has admin status</p>"          }        ]      },      "examples": [        {          "title": "Success Response:",          "content": "\n[\n  {\n    id: 'ef6133bb-ade4-43a8-a230-f23b324828d6',\n    osmId: 35366,\n    osmDisplayName: 'User95714',\n    osmCreatedAt: '2019-10-11T11:18:18.582Z',\n    isAdmin: false\n  },\n  {\n    id: '9a03458d-3514-41f7-a850-729896c60cdd',\n    osmId: 43533,\n    osmDisplayName: 'User79416',\n    osmCreatedAt: '2019-10-11T11:18:18.577Z',\n    isAdmin: false\n  },\n  ...\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>The error code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    },    "version": "0.1.1",    "filename": "app/routes/users/list.js",    "groupTitle": "Users",    "name": "GetUsers"  },  {    "group": "Users",    "type": "patch",    "url": "/users/:id",    "title": "3. PATCH /users/:id",    "description": "<p>Update user, must be owner or admin.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": ":id",            "description": "<p>User id.</p>"          },          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "description",            "description": "<p>User description.</p>"          }        ]      }    },    "version": "0.1.1",    "filename": "app/routes/users/patch.js",    "groupTitle": "Users",    "name": "PatchUsersId",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT access token obtained at /login</p>"          }        ]      },      "examples": [        {          "title": "Header-Example:",          "content": "{\n  \"authorization\": \"yJvc21JZCI6MTcxNTMsIm9zbU...\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "statusCode",            "description": "<p>HTTP status code</p>"          },          {            "group": "Success 200",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          }        ]      },      "examples": [        {          "title": "Success response:",          "content": "HTTP/1.1 200 Success\n{\n \"statusCode\": 200,\n \"message\": \"Action completed successfully.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<p>Error HTTP status code</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>Error name</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Error message</p>"          }        ]      },      "examples": [        {          "title": "Error Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n \"statusCode\": 400,\n \"error\": \"Bad Request\",\n \"message\": \"Oops!\"\n}",          "type": "json"        }      ]    }  }]
